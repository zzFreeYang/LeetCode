Redis

1. Redis的应用场景
2. Redis支持的数据类型（必考）
3. zset跳表的数据结构（必考）
4. Redis的数据过期策略（必考）
5. Redis的LRU过期策略的具体实现
6. 如何解决Redis缓存雪崩，缓存穿透问题
7. Redis的持久化机制（必考）
8. Redis的管道pipeline



1.Redis的应用场景:


2.Redis支持的数据类型:
    Redis共有五种类型的对象：
    1.字符串: (simple dynamic string ,SDS)简单动态字符串。
        SDS和普通C字符串区别:
            结构上:struct sdshdr{
                int len ; //SDS所保存字符串的长度
                int free; //buf 数组中未使用字节的长度
                char buf[];//字节数组，用于保存字符串
            }
        好处: a.可以直接重用C字符串函数库的函数
              b.常数复杂度获取字符串长度
              c.利用free来杜绝缓冲区溢出
              d.减少修改字符串时带来的内存重分配次数( 通过free和len来做预分配;惰性空间释放（优化字符串缩短)
              e.用len长度判断而不是 \0判断结束，保证二进制安全


    2.列表
        列表键的底层实现1: 链表 (双端 prev,next指针;无环:双端指针指向null;带表头表尾指针;带链表长度计数器;


    3.哈希
        哈希键的底层实现1: 字典 （举例： 通过HSET给person设置多个键值对,age 20,name jack，然后可以通过hgetall person 来获取）
        字典的底层就是hash,基本结构:哈希表数组 + 哈希表大小 size + 哈希表大小掩码(计算索引) sizemask + 已有节点的数量 used


    4.集合
    5.有序集合

